name: Dynamic Proto Tests

on:
  workflow_dispatch:  # Manual trigger for testing
  push:
    branches: [ main, dev ]
    paths:
      - 'postfiat/v3/*.proto'
      - 'python/scripts/generate_dynamic_protobuf_tests.py'
      - 'python/scripts/proto_introspection.py'
      - 'python/scripts/*_test_generator.py'
      - '.github/workflows/dynamic-proto-tests.yml'
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'postfiat/v3/*.proto'
      - 'python/scripts/generate_dynamic_protobuf_tests.py'
      - 'python/scripts/proto_introspection.py'
      - 'python/scripts/*_test_generator.py'
      - '.github/workflows/dynamic-proto-tests.yml'

jobs:
  dynamic-proto-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: typescript/package-lock.json

      - name: Setup Foundry
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          echo "=== Debugging foundryup installation ==="
          ls -la ~/.foundry/ || echo "~/.foundry/ does not exist"
          ls -la ~/.foundry/bin/ || echo "~/.foundry/bin/ does not exist"
          find /home/runner -name "foundryup" 2>/dev/null || echo "foundryup not found anywhere"
          echo "=== Attempting direct installation ==="
          # Download and install Foundry directly
          FOUNDRY_DIR="/home/runner/.foundry"
          mkdir -p "$FOUNDRY_DIR/bin"
          curl -L https://github.com/foundry-rs/foundry/releases/download/nightly/foundry_nightly_linux_amd64.tar.gz | tar -xz -C "$FOUNDRY_DIR/bin"
          echo "$FOUNDRY_DIR/bin" >> $GITHUB_PATH

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup A2A dependency
        run: ./scripts/setup-a2a-dependency.sh

      # Use Makefile for all codegen and test steps
      - name: Makefile help (discoverability)
        run: make help

      - name: Regenerate all code and tests
        run: make regen-all

      - name: Generate dynamic proto tests
        run: make tests-dynamic

      - name: Run all tests (Python + TypeScript)
        run: make tests

      # Optionally, add artifact upload or commit steps if needed
